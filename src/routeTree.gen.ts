/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as FavoritesRouteImport } from './routes/favorites/route'
import { Route as ExploreRouteImport } from './routes/explore/route'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as IndexImport } from './routes/index'
import { Route as ArtworksArtworkIdImport } from './routes/artworks/$artworkId'

// Create/Update Routes

const FavoritesRouteRoute = FavoritesRouteImport.update({
  id: '/favorites',
  path: '/favorites',
  getParentRoute: () => rootRoute,
} as any)

const ExploreRouteRoute = ExploreRouteImport.update({
  id: '/explore',
  path: '/explore',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ArtworksArtworkIdRoute = ArtworksArtworkIdImport.update({
  id: '/artworks/$artworkId',
  path: '/artworks/$artworkId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/explore': {
      id: '/explore'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof ExploreRouteImport
      parentRoute: typeof rootRoute
    }
    '/favorites': {
      id: '/favorites'
      path: '/favorites'
      fullPath: '/favorites'
      preLoaderRoute: typeof FavoritesRouteImport
      parentRoute: typeof rootRoute
    }
    '/artworks/$artworkId': {
      id: '/artworks/$artworkId'
      path: '/artworks/$artworkId'
      fullPath: '/artworks/$artworkId'
      preLoaderRoute: typeof ArtworksArtworkIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteRoute
  '/explore': typeof ExploreRouteRoute
  '/favorites': typeof FavoritesRouteRoute
  '/artworks/$artworkId': typeof ArtworksArtworkIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteRoute
  '/explore': typeof ExploreRouteRoute
  '/favorites': typeof FavoritesRouteRoute
  '/artworks/$artworkId': typeof ArtworksArtworkIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRoute
  '/explore': typeof ExploreRouteRoute
  '/favorites': typeof FavoritesRouteRoute
  '/artworks/$artworkId': typeof ArtworksArtworkIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/explore' | '/favorites' | '/artworks/$artworkId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/explore' | '/favorites' | '/artworks/$artworkId'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/explore'
    | '/favorites'
    | '/artworks/$artworkId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRoute
  ExploreRouteRoute: typeof ExploreRouteRoute
  FavoritesRouteRoute: typeof FavoritesRouteRoute
  ArtworksArtworkIdRoute: typeof ArtworksArtworkIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRoute,
  ExploreRouteRoute: ExploreRouteRoute,
  FavoritesRouteRoute: FavoritesRouteRoute,
  ArtworksArtworkIdRoute: ArtworksArtworkIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/explore",
        "/favorites",
        "/artworks/$artworkId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth/route.tsx"
    },
    "/explore": {
      "filePath": "explore/route.tsx"
    },
    "/favorites": {
      "filePath": "favorites/route.tsx"
    },
    "/artworks/$artworkId": {
      "filePath": "artworks/$artworkId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
